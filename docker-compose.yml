version: "3"
services:

  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./app:/src
      - ./utils:/src/utils
    command: bash -c "dockerize -wait tcp://db:5432 && gunicorn --bind 0.0.0.0:5000 --access-logfile "-" server:app --reload"
    ports:
      - 5000:5000
    environment:
      FLASK_ENV: development
    depends_on:
      - redis
      - db
    env_file:
      - .database.conf
      - .env
    stdin_open: true
    tty: true


  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./celery-queue:/src
      - ./utils:/src/utils
    command: bash -c "sleep 0 && celery -A tasks.celery worker -l info --uid=1"
    env_file:
      - .database.conf
      - .env
    depends_on:
      - redis
      - db

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./celery-queue:/src
      - ./utils:/src/utils
    command: bash -c "dockerize -wait tcp://web:5000 -timeout 60s -wait-retry-interval 1s && sleep 0 && celery -A tasks.celery beat -l info --pidfile="
    env_file:
      - .database.conf
      - .env
    depends_on:
      - redis
      - db

  celery-flower:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./celery-queue:/src
      - ./utils:/src/utils
    ports:
     - 5555:5555
    command: bash -c "dockerize -wait tcp://web:5000 -timeout 60s -wait-retry-interval 1s && sleep 2 && celery -A tasks.celery flower --port=5555 --broker=redis://redis:6379/0"
    env_file:
      - .database.conf
      - .env
    depends_on:
      - redis

  db:
    image: postgres:12
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    env_file:
      - .database.conf
    ports:
      - 5432:5432

  redis:
    image: redis
    ports:
      - 6379:6379

# networks:
#   db_nw:
#     driver: bridge
#   web_nw:
#     driver: bridge